<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <AvaloniaUseCompiledBindingsByDefault>false</AvaloniaUseCompiledBindingsByDefault>
  </PropertyGroup>
   <ItemGroup>
    <ProjectReference Include="..\SDL2-CS\SDL2-CS.Core.csproj" />
    <ProjectReference Include="..\yac8i\yac8i.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.2.4" />
    <PackageReference Include="Avalonia.Controls.DataGrid" Version="11.2.4" />
    <PackageReference Include="Avalonia.Desktop" Version="11.2.4" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.2.4" />
    <PackageReference Include="Avalonia.Themes.Simple" Version="11.2.4" />
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
  </ItemGroup>
  <Target Name="CopySDL2DllsForWindows" BeforeTargets="Build" Condition=" '$(OS)' == 'Windows_NT' ">
    <Exec Command="xcopy /y /d  $(ProjectDir)lib\SDL2-2.0.18\SDL2.dll $(ProjectDir)$(OutDir)" />
    <Exec Command="xcopy /y /d  $(ProjectDir)lib\SDL2_image-2.0.5-win32-x64\libpng16-16.dll $(ProjectDir)$(OutDir)" />
    <Exec Command="xcopy /y /d  $(ProjectDir)lib\SDL2_image-2.0.5-win32-x64\SDL2_image.dll $(ProjectDir)$(OutDir)" />
    <Exec Command="xcopy /y /d  $(ProjectDir)lib\SDL2_image-2.0.5-win32-x64\zlib1.dll $(ProjectDir)$(OutDir)" />
  </Target>
  <Target Name="CopyToDeploy" AfterTargets="Build" Condition=" '$(OS)' == 'Windows_NT' ">
    <Exec Command="xcopy /y /e /k /h /i   $(ProjectDir)$(OutDir)runtimes $(ProjectDir)..\Deploy\runtimes" />
    <Exec Command="xcopy /y /d  $(ProjectDir)$(OutDir)*.dll $(ProjectDir)..\Deploy" />
    <Exec Command="xcopy /y /d  $(ProjectDir)$(OutDir)*.exe $(ProjectDir)..\Deploy" />
    <Exec Command="xcopy /y /d  $(ProjectDir)$(OutDir)*.json $(ProjectDir)..\Deploy" />
  </Target>
</Project>
